{"version":3,"sources":["C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/$_lazy_route_resource lazy","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app-routing.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/login-container.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/user.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/services/user/user.service.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/environments/environment.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","// MODULES\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// COMPONENTS\r\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\r\nimport { LoginComponent } from './components/log-reg/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: LogRegComponent,\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    pathMatch: 'full',\r\n    component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.ts","// MODULES\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WebCamModule, WebCamComponent } from 'ack-angular-webcam'; // importing ack-webcam \r\n\r\n// COMPONENTS\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/log-reg/login/login.component';\r\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\n// PROVIDERS\r\nimport { UserService } from './services/user/user.service';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    LogRegComponent,\r\n    DashboardComponent,\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    WebCamModule // ack-webcam\r\n  ],\r\n  providers: [UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.module.ts","import { ILoginContainer } from \"../interfaces/login-container\";\r\n\r\nexport class LoginContainer implements ILoginContainer{\r\n\timages: string[];\r\n\tname: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/login-container.ts","\r\n// DEPENDENCIES\r\nimport { IUser } from '../interfaces/user';\r\n\r\n\r\n/**\r\n * base user class that implements base IUser\r\n */\r\nexport class User implements IUser {\r\n    name: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/user.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-danger\\\" (click)='logout()'>Logout</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// JSON CLASSES & INTERFACES\nimport { IServerMessage } from '../../interfaces/server-message';\n\n// PROVIDERS\nimport { Router } from '@angular/router';\nimport { UserService } from './../../services/user/user.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _router: Router, private _userService: UserService) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res) => {\n      if (!res.success) {\n        this._router.navigateByUrl('/');\n      }\n    });\n  }\n\n  logout() {\n\n    // this will attempt to navigate to login reg regardless\n    // of response. Login reg component can handle this\n    this._userService.logoutUser((response) => {\n      this._router.navigate(['']);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.css\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <app-login></app-login>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.html\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// PROVIDERS\nimport { UserService } from './../../services/user/user.service';\nimport { Router } from '@angular/router';\n\n// JSON CLASSES & INTERFACES\nimport { ServerMessage } from './../../classes/server-message';\n\n@Component({\n  selector: 'app-log-reg',\n  templateUrl: './log-reg.component.html',\n  styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n\n  constructor(private _userService: UserService, private _router: Router) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res) => {\n\n      // if the user is currently logged in the user should be sent\n      // to the main app\n      if (res.success) {\n        this._router.navigate(['dashboard']);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".web-size {\\r\\n    width: 500px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.css\n// module id = ../../../../../src/app/components/log-reg/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center align-text-center\\\">\\r\\n  <h1 class=\\\"display-3\\\">Face Login</h1>\\r\\n\\r\\n  <form class=\\\"form-group mt-2\\\">\\r\\n    <ack-webcam [(ref)]=\\\"webcam\\\" [options]=\\\"options\\\" (success)=\\\"onCamSuccess($event)\\\" (catch)=\\\"onCamError($event)\\\" class=\\\"web-size\\\"></ack-webcam>\\r\\n    <br>\\r\\n    <h4>{{serverMessage}}{{dots}}</h4>\\r\\n    <label for=\\\"name\\\">Name</label>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"\\\" name=\\\"name\\\" class=\\\"form-control\\\" required [(ngModel)]='user.name' #name='ngModel'>\\r\\n    <div class=\\\"text-danger\\\" *ngIf='name.errors && name.touched && name.dirty'>\\r\\n      <span *ngIf='name.errors.required'> * Name is required</span>\\r\\n    </div>\\r\\n    <br><button class=\\\"btn btn-primary btn-block btn-large\\\" (click)=\\\"submitName()\\\" *ngIf='!(name.errors)'>Login</button>\\r\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.html\n// module id = ../../../../../src/app/components/log-reg/login/login.component.html\n// module chunks = main","// DEPENDENCIES\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { WebCamComponent } from 'ack-angular-webcam';\r\nimport { Http, Request } from '@angular/http';\r\n\r\n// PROVIDERS\r\nimport { UserService } from './../../../services/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n// JSON CLASSES & INTERFACES\r\nimport { User } from '../../../classes/user';\r\nimport { IUser } from '../../../interfaces/user';\r\nimport { setInterval, clearInterval } from 'timers';\r\nimport { LoginContainer } from '../../../classes/login-container';\r\nimport { IServerMessage } from '../../../interfaces/server-message';\r\n\r\nconst template = `\r\n<ack-webcam\r\n  [(ref)]   = \"webcam\"\r\n  [options] = \"options\"\r\n  (success) = \"onCamSuccess($event)\"\r\n  (catch)   = \"onCamError($event)\"\r\n></ack-webcam>\r\n<button (click)=\"genBase64()\"> generate base64 </button>\r\n<button (click)=\"genPostData()\"> generate post data </button>\r\n`\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  webcam: WebCamComponent; // will be populated by <ack-webcam [(ref)]=\"webcam\">\r\n  base64: string;\r\n  user: IUser;\r\n  serverMessage: string;\r\n  count: number;\r\n  dots: string;\r\n  options: {};\r\n  constructor(public http: Http, private _router: Router, private _userService: UserService) {\r\n    this.user = new User();\r\n    this.serverMessage = '';\r\n    this.count = 0;\r\n    this.dots = '';\r\n    this.options = {\r\n      width: 500,\r\n      height: 500\r\n    };\r\n  }\r\n\r\n  dotify() {\r\n    let c = 0;\r\n    const id = setInterval(() => {\r\n      c++;\r\n      const dots = c % 3;\r\n      let tmpStr = '';\r\n      for (let i = 0; i < dots; i++) {\r\n        tmpStr += '.';\r\n      }\r\n      this.dots = tmpStr;\r\n    }, 800);\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * when a user submits their name, return success or unsuccessful if found\r\n   */\r\n  submitName() {\r\n    let idDots = this.dotify();\r\n    this.serverMessage = 'trying to find you';\r\n    clearInterval(idDots);\r\n    this.dots = '';\r\n    idDots = this.dotify();\r\n    this._userService.submitName(this.user, (res) => {\r\n      const loginContainer = new LoginContainer();\r\n      loginContainer.name = this.user.name;\r\n      console.log(res);\r\n      if (res.success) {\r\n        this.getImages(5, (images) => { // if successful send 5 images for verification\r\n          this.serverMessage = 'verifying its you';\r\n          loginContainer.images = images;\r\n          this._userService.verifyUser(loginContainer, (data) => {\r\n            console.log('verified', JSON.stringify(data, null, 4));\r\n            if (data.success) {\r\n              this._router.navigate(['dashboard']);\r\n            } else {\r\n              clearInterval(idDots);\r\n              this.dots = '';\r\n              this.serverMessage = 'failed try again?';\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        let c = 6;\r\n        const id = setInterval(() => {\r\n          if (c <= 1) {\r\n            clearInterval(id);\r\n          }\r\n          c--;\r\n          if (c <= 1) {\r\n            this.serverMessage = `building a personal model for you`;\r\n          } else {\r\n            this.serverMessage = `hold still for for ${c} seconds while we examine you`;\r\n          }\r\n        }, 1000);\r\n        this.getImages(25, (images) => { // if unsuccessful send 25 images to add new user\r\n          loginContainer.images = images;\r\n          this._userService.newUser(loginContainer, (data) => {\r\n            console.log('user added');\r\n            console.log(data);\r\n            if (data.success) {\r\n              this._router.navigate(['dashboard']);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * generate base64 string from webcam image\r\n   * @param callback get a single base64 image\r\n   */\r\n  private _getBase64(callback: (base: string) => void): void {\r\n    this.webcam.getBase64().then(base => {\r\n      callback(base);\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * take x number of photos at x interval and push base64 strings into images array\r\n   * @param size number of photos to take\r\n   * @param callback get array of photos\r\n   */\r\n  getImages(size: number, callback: (images: Array<string>) => void): void {\r\n    let a = [];\r\n    const id = setInterval(() => {\r\n      this._getBase64((base) => {\r\n        if (size <= 0) {\r\n          clearInterval(id);\r\n          callback(a);\r\n        } else {\r\n          size--;\r\n          a.push(base);\r\n        }\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  onCamError(err) { }\r\n\r\n  onCamSuccess() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.ts","// INJECTIONS\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// JSON CLASSES & INTERFACES\r\nimport { ServerMessage } from './../../classes/server-message';\r\nimport { IServerMessage } from './../../interfaces/server-message';\r\nimport { IUser } from './../../interfaces/user';\r\nimport { User } from '../../classes/user';\r\n\r\n// SERVICE DEPENDENCIES\r\nimport * as uriBuilder from 'build-url';\r\nimport { ILoginContainer } from '../../interfaces/login-container';\r\n\r\n/**\r\n * User Service class is used to do api classes to the backend\r\n * Contains User data and other information\r\n */\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  /**\r\n   * base constructor\r\n   * @param _http injectable\r\n   */\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  /**\r\n   * build a uri based on the current classes requests\r\n   * @param query uri query location on local hostname\r\n   * @returns {string} uri location\r\n   */\r\n  private _localAPIBuild(query: string): string {\r\n    return uriBuilder('', {\r\n      path: `api/exp/${query}`\r\n    });\r\n  }\r\n\r\n  /**\r\n   * queries the backend if the user is currently logged in or not\r\n   * @param {callback: (res: IServerMessage)} callback callback to run after backend response\r\n   */\r\n  ensureUserIsLoggedIn(callback: (res: IServerMessage<{ message: string }>) => void): void {\r\n    const uri = this._localAPIBuild('is-logged');\r\n    this._http.get(uri).subscribe((response: IServerMessage<{ message: string }>) => callback(response));\r\n  }\r\n\r\n  logoutUser(callback: (res: IServerMessage<{ message: string }>) => void): void {\r\n    const uri = this._localAPIBuild('logout');\r\n    this._http.get(uri).subscribe((response: IServerMessage<{ message: string }>) => callback(response));\r\n  }\r\n\r\n  /**\r\n   * submits a name to the backend\r\n   * @param user user data to be sent to the backend\r\n   * @param callback callback passes backend results\r\n   */\r\n  submitName(user: IUser, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`find-user/${user.name}`);\r\n    this._http.get(uri).subscribe((response: IServerMessage<IUser>) => {\r\n      callback(response);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * verifies a user to the backend\r\n   * @param container user name and images array to be sent to the backend\r\n   * @param callback call passes backend results\r\n   */\r\n  verifyUser(container: ILoginContainer, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`verify`);\r\n    this._http.post(uri, container).subscribe((response: IServerMessage<IUser>) => {\r\n      callback(response);\r\n    });\r\n  }\r\n  /**\r\n   * adds a new user to the backend\r\n   * @param container user name and images array to be sent to the backend\r\n   * @param callback call passes backend results\r\n   */\r\n  newUser(container: ILoginContainer, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`add-user`);\r\n    this._http.post(uri, container).subscribe((response: IServerMessage<IUser>) => {\r\n      callback(response);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/services/user/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/main.ts"],"sourceRoot":"webpack:///"}