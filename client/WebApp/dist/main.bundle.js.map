{"version":3,"sources":["C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/$_lazy_route_resource lazy","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app-routing.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/login-container.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/user.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/services/user/user.service.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/environments/environment.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","// MODULES\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENTS\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\nimport { LoginComponent } from './components/log-reg/login/login.component';\nimport { RegistrationComponent } from './components/log-reg/registration/registration.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: LogRegComponent,\n  },\n  {\n    path: 'dashboard',\n    pathMatch: 'full',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.component.ts","// MODULES\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WebCamModule, WebCamComponent } from 'ack-angular-webcam'; // importing ack-webcam \r\n\r\n// COMPONENTS\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/log-reg/login/login.component';\r\nimport { RegistrationComponent } from './components/log-reg/registration/registration.component';\r\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\n// PROVIDERS\r\nimport { UserService } from './services/user/user.service';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    LogRegComponent,\r\n    DashboardComponent,\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    WebCamModule // ack-webcam\r\n  ],\r\n  providers: [UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/app.module.ts","import { ILoginContainer } from \"../interfaces/login-container\";\r\n\r\nexport class LoginContainer implements ILoginContainer{\r\n\timages: string[];\r\n\tname: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/login-container.ts","\r\n// DEPENDENCIES\r\nimport { IUser } from '../interfaces/user';\r\n\r\n\r\n/**\r\n * base user class that implements base IUser\r\n */\r\nexport class User implements IUser {\r\n    name: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/classes/user.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-danger\\\" (click)='logout()'>Logout</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// JSON CLASSES & INTERFACES\nimport { IServerMessage } from '../../interfaces/server-message';\n\n// PROVIDERS\nimport { Router } from '@angular/router';\nimport { UserService } from './../../services/user/user.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _router: Router, private _userService: UserService) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res) => {\n      if (!res.success) {\n        this._router.navigateByUrl('/');\n      }\n    });\n  }\n\n  logout() {\n\n    // this will attempt to navigate to login reg regardless\n    // of response. Login reg component can handle this\n    this._userService.logoutUser((response) => {\n      this._router.navigate(['']);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.css\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <app-registration></app-registration>\\n    <app-login></app-login>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.html\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// PROVIDERS\nimport { UserService } from './../../services/user/user.service';\nimport { Router } from '@angular/router';\n\n// JSON CLASSES & INTERFACES\nimport { ServerMessage } from './../../classes/server-message';\n\n@Component({\n  selector: 'app-log-reg',\n  templateUrl: './log-reg.component.html',\n  styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n\n  constructor(private _userService: UserService, private _router: Router) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res) => {\n\n      // if the user is currently logged in the user should be sent\n      // to the main app\n      if (res.success) {\n        this._router.navigate(['dashboard']);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/log-reg.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.css\n// module id = ../../../../../src/app/components/log-reg/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col text-center\\\">\\r\\n  <h1 class=\\\"display-3\\\">Face Login</h1>\\r\\n\\r\\n  <form class=\\\"form-group mt-2\\\">\\r\\n    <ack-webcam [(ref)]=\\\"webcam\\\" [options]=\\\"options\\\" (success)=\\\"onCamSuccess($event)\\\" (catch)=\\\"onCamError($event)\\\"></ack-webcam>\\r\\n    <br>\\r\\n    <label for=\\\"name\\\">Name</label>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"\\\" name=\\\"name\\\" class=\\\"form-control\\\" required [(ngModel)]='user.name' #name='ngModel'>\\r\\n    <div class=\\\"text-danger\\\" *ngIf='name.errors && name.touched && name.dirty'>\\r\\n      <span *ngIf='name.errors.required'> * Name is required</span>\\r\\n    </div>\\r\\n    <br><button class=\\\"btn btn-primary btn-block btn-large\\\" (click)=\\\"submitName()\\\" *ngIf='!(name.errors)'>Submit Name</button>\\r\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.html\n// module id = ../../../../../src/app/components/log-reg/login/login.component.html\n// module chunks = main","// DEPENDENCIES\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { WebCamComponent } from 'ack-angular-webcam';\r\nimport { Http, Request } from '@angular/http';\r\n\r\n// PROVIDERS\r\nimport { UserService } from './../../../services/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n// JSON CLASSES & INTERFACES\r\nimport { User } from '../../../classes/user';\r\nimport { IUser } from '../../../interfaces/user';\r\nimport { setInterval, clearInterval } from 'timers';\r\nimport { LoginContainer } from '../../../classes/login-container';\r\nimport { IServerMessage } from '../../../interfaces/server-message';\r\n\r\nconst template = `\r\n<ack-webcam\r\n  [(ref)]   = \"webcam\"\r\n  [options] = \"options\"\r\n  (success) = \"onCamSuccess($event)\"\r\n  (catch)   = \"onCamError($event)\"\r\n></ack-webcam>\r\n<button (click)=\"genBase64()\"> generate base64 </button>\r\n<button (click)=\"genPostData()\"> generate post data </button>\r\n`\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  webcam: WebCamComponent; // will be populated by <ack-webcam [(ref)]=\"webcam\">\r\n  base64: string;\r\n  user: IUser;\r\n  serverMessage: string;\r\n  count: number;\r\n  constructor(public http: Http, private _router: Router, private _userService: UserService) {\r\n    this.user = new User();\r\n    this.serverMessage = '';\r\n    this.count = 0;\r\n  }\r\n\r\n  submitName() {\r\n    this._userService.submitName(this.user, (res) => {\r\n      const loginContainer = new LoginContainer();\r\n      loginContainer.name = this.user.name;\r\n      if (res.success) {\r\n        this.getImages(5, (images) => {\r\n          loginContainer.images = images;\r\n          this._userService.verifyUser(loginContainer, (data: IServerMessage<IUser>) => {\r\n            console.log('verified', JSON.stringify(res, null, 4));\r\n          });\r\n        })\r\n      } else {\r\n        this.getImages(25, (images) => {\r\n          loginContainer.images = images;\r\n          this._userService.newUser(loginContainer, (data) => {\r\n            console.log('verified', JSON.stringify(res, null, 4));\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private _getBase64(callback: (base: string) => void): void {\r\n    this.webcam.getBase64().then(base => {\r\n      callback(base);\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n  }\r\n\r\n  getImages(size: number, callback: (images: Array<string>) => void): void {\r\n    let a = [];\r\n    const id = setInterval(() => {\r\n      this._getBase64((base) => {\r\n        if (size <= 0) {\r\n          clearInterval(id);\r\n          callback(a);\r\n        } else {\r\n          size--;\r\n          a.push(base);\r\n        }\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  genBase64() {\r\n    const loginData = new LoginContainer();\r\n    loginData.name = this.user.name;\r\n    this.getImages(10, (images) => {\r\n      loginData.images = images;\r\n    });\r\n  }\r\n\r\n  // genBase64() {\r\n  //   this.webcam.getBase64()\r\n  //     .then(base => {\r\n  //       console.log(base);\r\n  //       // this._userService.sendJson({data: base});\r\n  //       this.base64 = base\r\n  //     })\r\n  //     .catch(e => console.error(e))\r\n  // }\r\n\r\n  //get HTML5 FormData object and pretend to post to server\r\n  genPostData() {\r\n    this.webcam.captureAsFormData({ fileName: 'file.jpg' })\r\n      .then(formData => {\r\n        // this._userService.submitUser(user, formData, () => {})\r\n      })\r\n      .catch(e => console.error(e))\r\n    console.log(\"going through genPostData\") // test\r\n  }\r\n\r\n  onCamError(err) { }\r\n\r\n  onCamSuccess() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // login() {\r\n  //   this._userService.loginUser(this.user, (res) => {\r\n\r\n  //     // if the login was successful continue to the dashboard\r\n  //     // else display the response the backend gave\r\n  //     if (res.success) {\r\n  //       this._router.navigate(['dashboard']);\r\n  //     } else {\r\n  //       this.serverMessage = res.output.message;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fixed{\\r\\n    width: 363px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.css\n// module id = ../../../../../src/app/components/log-reg/registration/registration.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"col fixed\\\">\\r\\n    <h1 class=\\\"display-3\\\">Register</h1>\\r\\n    <form class=\\\"form-group ml-2 mt-2\\\">\\r\\n        <label for=\\\"firstName\\\">First Name</label>\\r\\n        <input \\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\" \\r\\n          name=\\\"firstName\\\" \\r\\n          required\\r\\n          minlength=\\\"3\\\"\\r\\n          maxlength=\\\"255\\\"\\r\\n          [(ngModel)]='user.firstName'\\r\\n          #firstName='ngModel'>\\r\\n        <div \\r\\n          class=\\\"text-danger\\\" \\r\\n          *ngIf='firstName.errors && firstName.touched && firstName.dirty'>\\r\\n            *\\r\\n            <span *ngIf='firstName.errors.required'>First name is required</span>\\r\\n            <span *ngIf='firstName.errors.minlength'>First name must be longer than 3 characters</span>\\r\\n        </div>\\r\\n        <label for=\\\"lastName\\\">Last Name</label>\\r\\n        <input \\r\\n        class=\\\"form-control\\\"\\r\\n        type=\\\"text\\\" \\r\\n        name=\\\"lastName\\\" \\r\\n        required\\r\\n        minlength=\\\"3\\\"\\r\\n        maxlength=\\\"255\\\"\\r\\n        [(ngModel)]='user.lastName'\\r\\n        #lastName='ngModel'>\\r\\n        <div \\r\\n        class=\\\"text-danger\\\" \\r\\n        *ngIf='lastName.errors && lastName.touched && lastName.dirty'>\\r\\n        *\\r\\n        <span *ngIf='lastName.errors.required'>Last name is required</span>\\r\\n        <span *ngIf='lastName.errors.minlength'>Last name must be longer than 3 characters</span>\\r\\n      </div>\\r\\n      <label for=\\\"email\\\">Email</label>\\r\\n      <input \\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"text\\\" \\r\\n          name=\\\"email\\\" \\r\\n          required\\r\\n          pattern=\\\"[a-zA-Z0-9.+_-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z]+$\\\"\\r\\n          maxlength=\\\"255\\\"\\r\\n          [(ngModel)]='user.email'\\r\\n          #email='ngModel'>\\r\\n        <div \\r\\n        class=\\\"text-danger\\\" \\r\\n          *ngIf='email.errors && email.touched && email.dirty'>\\r\\n            *\\r\\n            <span *ngIf='email.errors.required'>Email is required</span>\\r\\n            <span *ngIf='email.errors.pattern'>Email entered is invalid</span>\\r\\n        </div>\\r\\n        <div class=\\\"text-danger\\\">\\r\\n          <span *ngIf='serverMessage != \\\"\\\"'>*{{serverMessage}}</span>\\r\\n        </div>\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input \\r\\n        class=\\\"form-control\\\"\\r\\n        type=\\\"text\\\" \\r\\n        name=\\\"password\\\" \\r\\n        required\\r\\n        pattern=\\\"^[A-Za-z\\\\d$@$!%*?&]{4,}$\\\"\\r\\n        maxlength=\\\"255\\\"\\r\\n        [(ngModel)]='user.password'\\r\\n        #password='ngModel'>\\r\\n        <div \\r\\n          class=\\\"text-danger\\\" \\r\\n          *ngIf='password.errors && password.touched && password.dirty'>\\r\\n            *\\r\\n            <span *ngIf='password.errors.required'>Password is required</span>\\r\\n            <span *ngIf='password.errors.pattern'>Password entered is invalid</span>\\r\\n        </div>\\r\\n        <label for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n        <input \\r\\n        class=\\\"form-control\\\"\\r\\n        type=\\\"text\\\" \\r\\n        name=\\\"confirmPassword\\\"\\r\\n        required \\r\\n        pattern=\\\"{{user.password}}\\\"\\r\\n        [(ngModel)]='user.confirmPassword'\\r\\n        #confirmPassword='ngModel'>\\r\\n        <div \\r\\n          class=\\\"text-danger\\\" \\r\\n          *ngIf='confirmPassword.errors && confirmPassword.touched && confirmPassword.dirty'>\\r\\n            *\\r\\n            <span *ngIf='confirmPassword.errors.pattern'>Passwords do not match</span>\\r\\n        </div>\\r\\n      </form>\\r\\n      \\r\\n      <button \\r\\n        (click)='registerUser()' \\r\\n        class=\\\"btn btn-success float-right\\\"\\r\\n        *ngIf='!(firstName.errors || lastName.errors || email.errors || password.errors || confirmPassword.errors)'>Register</button>\\r\\n</div> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.html\n// module id = ../../../../../src/app/components/log-reg/registration/registration.component.html\n// module chunks = main","// DEPENDENCIES\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// JSON CLASSES & INTERFACES\r\nimport { ServerMessage } from './../../../classes/server-message';\r\nimport { IServerMessage } from './../../../interfaces/server-message';\r\nimport { User } from './../../../classes/user';\r\nimport { IUser } from './../../../interfaces/user';\r\n\r\n// PROVIDERS\r\nimport { UserService } from './../../../services/user/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  user: IUser;\r\n  serverMessage: string;\r\n  constructor(private _userService: UserService, private _router: Router) {\r\n    this.user = new User();\r\n    this.serverMessage = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // registerUser() {\r\n  //   this._userService.registerUser(this.user, (res) => {\r\n\r\n  //     // if registration went successfully continue to dashboard\r\n  //     // else display the message the server gave\r\n  //     if (res.success) {\r\n  //       this._router.navigateByUrl('/dashboard');\r\n  //     } else if (res.output.message) {\r\n  //       this.serverMessage = res.output.message;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/components/log-reg/registration/registration.component.ts","// INJECTIONS\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// JSON CLASSES & INTERFACES\r\nimport { ServerMessage } from './../../classes/server-message';\r\nimport { IServerMessage } from './../../interfaces/server-message';\r\nimport { IUser } from './../../interfaces/user';\r\nimport { User } from '../../classes/user';\r\n\r\n// SERVICE DEPENDENCIES\r\nimport * as uriBuilder from 'build-url';\r\nimport { ILoginContainer } from '../../interfaces/login-container';\r\n\r\n/**\r\n * User Service class is used to do api classes to the backend\r\n * Contains User data and other information\r\n */\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  /**\r\n   * base constructor\r\n   * @param _http injectable\r\n   */\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  /**\r\n   * build a uri based on the current classes requests\r\n   * @param query uri query location on local hostname\r\n   * @returns {string} uri location\r\n   */\r\n  private _localAPIBuild(query: string): string {\r\n    return uriBuilder('', {\r\n      path: `api/exp/${query}`\r\n    });\r\n  }\r\n\r\n  /**\r\n   * queries the backend if the user is currently logged in or not\r\n   * @param {callback: (res: IServerMessage)} callback callback to run after backend response\r\n   */\r\n  ensureUserIsLoggedIn(callback: (res: IServerMessage<{ message: string }>) => void): void {\r\n    const uri = this._localAPIBuild('is-logged');\r\n    this._http.get(uri).subscribe((response: IServerMessage<{ message: string }>) => callback(response));\r\n  }\r\n\r\n  logoutUser(callback: (res: IServerMessage<{ message: string }>) => void): void {\r\n    const uri = this._localAPIBuild('logout');\r\n    this._http.get(uri).subscribe((response: IServerMessage<{ message: string }>) => callback(response));\r\n  }\r\n\r\n  submitName(user: IUser, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`find-user/${user.name}`);\r\n    this._http.get(uri).subscribe((response: IServerMessage<IUser>) => {\r\n      callback(response);\r\n    });\r\n  }\r\n\r\n  verifyUser(container: ILoginContainer, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`verify`);\r\n    this._http.post(uri, container).subscribe((response: IServerMessage<IUser>) => {\r\n\r\n    });\r\n  }\r\n\r\n  newUser(container: ILoginContainer, callback: (res: IServerMessage<IUser>) => void): void {\r\n    const uri = this._localAPIBuild(`add-user`);\r\n    this._http.post(uri, container).subscribe((response: IServerMessage<IUser>) => {\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // submitUser(user: IUser, formData, callback: (res: IServerMessage<IUser>) => void): void {\r\n  //   const uri = this._localAPIBuild('submit-user');\r\n  //   // this._http.post(uri, user, formData).subscribe((response: IServerMessage<{ message: string }>) => callback(response));\r\n  // }\r\n\r\n  // /**\r\n  //  * register a user to the database\r\n  //  * @param {IUser} user user data to attempt to add to the database\r\n  //  */\r\n  // registerUser(user: IUser, callback: (res: IServerMessage<IUser>) => void): void {\r\n  //   const uri = this._localAPIBuild('register');\r\n  //   this._http.post(uri, user).subscribe((response: IServerMessage<IUser>) => callback(response));\r\n  // }\r\n\r\n  // /**\r\n  //  * login a user to the database\r\n  //  * @param user user data to attempt login\r\n  //  * @param callback processing to be done after backend response\r\n  //  */\r\n  // loginUser(user: IUser, callback: (res: IServerMessage<IUser>) => void): void {\r\n  //   const uri = this._localAPIBuild('login');\r\n  //   this._http.post(uri, user).subscribe((response: IServerMessage<IUser>) => callback(response));\r\n  // }\r\n\r\n  // sendJson(json: any) {\r\n  //   console.log('in send json');\r\n  //   const uri = this._localAPIBuild('testing');\r\n  //   this._http.post(uri, json).subscribe((response) => {\r\n  //     console.log(response);\r\n  //     console.log(uri);\r\n  //   });\r\n  // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/app/services/user/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/Project/FaceLogging/client/WebApp/src/main.ts"],"sourceRoot":"webpack:///"}